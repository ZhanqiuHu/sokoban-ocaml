### Starting build.
# Target: map.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:mli, file:map.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules map.mli > map.mli.depends # cached
# Target: types.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:mli, file:types.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules types.mli > types.mli.depends # cached
# Target: types.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:mli, file:types.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o types.cmi types.mli
# Target: map.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:mli, file:map.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o map.cmi map.mli
# Target: map.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:ml, file:map.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules map.ml > map.ml.depends # cached
# Target: genmap.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:mli, file:genmap.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules genmap.mli > genmap.mli.depends
# Target: genmap.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:mli, file:genmap.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o genmap.cmi genmap.mli
# Target: map.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:map.cmo, file:map.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o map.cmo map.ml
# Target: types.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:ml, file:types.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules types.ml > types.ml.depends # cached
# Target: types.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:types.cmo, file:types.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o types.cmo types.ml
# Target: command.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules command.mli > command.mli.depends # cached
# Target: command.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o command.cmi command.mli
# Target: command.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules command.ml > command.ml.depends # cached
# Target: command.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o command.cmo command.ml
# Target: state.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:mli, file:state.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules state.mli > state.mli.depends # cached
# Target: state.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:mli, file:state.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o state.cmi state.mli
# Target: state.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:ml, file:state.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules state.ml > state.ml.depends # cached
# Target: state.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:state.cmo, file:state.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o state.cmo state.ml
# Target: main.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:mli, file:main.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules main.mli > main.mli.depends # cached
# Target: main.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:mli, file:main.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o main.cmi main.mli
# Target: main.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules main.ml > main.ml.depends # cached
# Target: gui.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:mli, file:gui.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules gui.mli > gui.mli.depends # cached
# Target: text.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:mli, file:text.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules text.mli > text.mli.depends # cached
# Target: gui.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:mli, file:gui.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o gui.cmi gui.mli
# Target: text.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:mli, file:text.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o text.cmi text.mli
# Target: main.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o main.cmo main.ml
# Target: authors.mli.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:mli, file:authors.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules authors.mli > authors.mli.depends
# Target: authors.cmi, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:mli, file:authors.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o authors.cmi authors.mli
# Target: authors.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:ml, file:authors.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules authors.ml > authors.ml.depends
# Target: authors.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:authors.cmo, file:authors.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o authors.cmo authors.ml
# Target: genmap.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:ml, file:genmap.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules genmap.ml > genmap.ml.depends # cached
# Target: genmap.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:genmap.cmo, file:genmap.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o genmap.cmo genmap.ml
# Target: gui.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:ml, file:gui.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules gui.ml > gui.ml.depends # cached
# Target: gui.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:gui.cmo, file:gui.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o gui.cmo gui.ml
# Target: text.ml.depends, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), extension:ml, file:text.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -modules text.ml > text.ml.depends # cached
# Target: text.cmo, tags: { package(ANSITerminal), package(camlimages), package(camlimages.jpeg), package(camlimages.png), package(graphics), package(ounit2), package(yojson), byte, compile, extension:cmo, extension:ml, file:text.cmo, file:text.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package yojson -package ANSITerminal -package graphics -package camlimages -package camlimages.png -package camlimages.jpeg -o text.cmo text.ml
# Compilation successful.
